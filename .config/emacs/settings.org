#+TITLE: GNU Emacs config.

* Basic settings

This section contains basic configuration without extenal packages(mostly).

** Remove visual noise

Disable startup message with ugly logo and tutorial links.

#+begin_src emacs-lisp
  (setq inhibit-startup-message t) ; Disable startup message
#+end_src

Get rid of common ui sections such as toolbar, etc.

#+begin_src emacs-lisp
  (tool-bar-mode -1) ; Disable toolbar
  (menu-bar-mode -1) ; Disable menubar
  (scroll-bar-mode -1) ; Disable scrollbar
  (setq use-dialog-box nil) ; Disable popup dialogs
#+end_src

Smooth scrolling.

#+begin_src emacs-lisp
  (setq redisplay-dont-pause t
        scroll-margin 5
        scroll-step 1
        scroll-conservatively 10000
        scroll-preserve-screen-position 1)
  (setq mouse-wheel-scroll-amount '(0.10))
  (setq mouse-wheel-progressive-speed nil)
#+end_src

Increase display perfomanse.

#+begin_src emacs-lisp
  (setq redisplay-dont-pause t)
#+end_src

Disable bell

#+begin_src emacs-lisp
  (setq ring-bell-function 'ignore)
#+end_src

** Move autogenerated shit to ~/.cache/emacs

First of all set `user-emacs-diretory`, that is used by many packages.

#+begin_src emacs-lisp
  (setq user-emacs-directory (expand-file-name "~/.cache/emacs"))
#+end_src

Setup `no-littering` package to move common files to this dir.

#+begin_src emacs-lisp
  (setq no-littering-etc-directory
        (expand-file-name "config/" user-emacs-directory))
  (setq no-littering-var-directory
        (expand-file-name "data/" user-emacs-directory))
  (use-package no-littering)
#+end_src

Use separate file for 'custom' settings.

#+begin_src emacs-lisp
  (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
  (load custom-file 'noerror 'nomessage)
#+end_src

** Usefull things

First of all - enable line numbers.

#+begin_src emacs-lisp
  (global-display-line-numbers-mode 1)
#+end_src

And don't forget to disable it for some modes.

#+begin_src emacs-lisp
  (dolist (mode '(org-mode-hook
                  term-mode-hook
                  shell-mode-hook
                  treemacs-mode-hook
                  eshell-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+end_src

Set 1 tab => 4 spaces.

#+begin_src emacs-lisp
  (setq-default indent-tabs-mode nil)
  (setq c-basic-indent 4)
  (setq tab-width 4)
#+end_src

#+begin_src emacs-lisp
  (electric-pair-mode t)
#+end_src

Enable recent files log.

#+begin_src emacs-lisp
  (recentf-mode 1)
#+end_src

Exclude `no-littering` files from `recentf` mode.

#+begin_src emacs-lisp
  (add-to-list 'recentf-exclude
               (recentf-expand-file-name no-littering-var-directory))
  (add-to-list 'recentf-exclude
               (recentf-expand-file-name no-littering-etc-directory))
#+end_src

Enable commands history.

#+begin_src emacs-lisp
  (savehist-mode 1)
#+end_src

And set it's length to 50.

#+begin_src emacs-lisp
  (setq history-length 50)
#+end_src

Remember last visited place in file.

#+begin_src emacs-lisp
  (save-place-mode 1)
#+end_src

Watch opened files for changes.

#+begin_src emacs-lisp
  (global-auto-revert-mode 1)
#+end_src

Make ESC quit prompts

#+begin_src emacs-lisp
  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)
#+end_src

** Styling

I don't know what is it.

#+begin_src emacs-lisp
  (set-fringe-mode 10)
#+end_src

Make background transparent.

#+begin_src emacs-lisp
  (set-frame-parameter nil 'alpha-background 95)
  (add-to-list 'default-frame-alist '(alpha-background . 95))
#+end_src

Set font.

#+begin_src emacs-lisp
  (set-frame-font "JetBrains Mono 12" nil t)
#+end_src

Setup theme.

#+begin_src emacs-lisp
  (use-package gruvbox-theme)
  (load-theme
   'gruvbox-dark-soft
   :no-confirm)
#+end_src

Ensure that all icons are installed.

#+begin_src emacs-lisp
  (use-package all-the-icons)
#+end_src

* Extensions

** Evil - extensible vi layer for Emacs

#+begin_src emacs-lisp
  (use-package evil)
  (evil-mode 1)
#+end_src

** Tree-sitter - better syntax parsing

#+begin_src emacs-lisp
  (use-package tree-sitter)
  (use-package tree-sitter-langs)
  (global-tree-sitter-mode)
  (add-hook 'tree-sitter-after-on-hook #'tree-sitter-hl-mode)
#+end_src

** Tabs with centaur-tabs

#+begin_src emacs-lisp
  (use-package centaur-tabs
    :demand
    :config
    (centaur-tabs-mode t)
    :bind
    ("C-<prior>" . centaur-tabs-backward)
    ("C-<next>" . centaur-tabs-forward))
#+end_src

** Minimap

#+begin_src emacs-lisp
  (use-package minimap)
#+end_src

** Treemacs

#+begin_src emacs-lisp
  (use-package treemacs
    :defer t
    :bind
    (:map global-map
          ("M-0"       . treemacs-select-window)
          ("C-x t 1"   . treemacs-delete-other-windows)
          ("C-x t t"   . treemacs)
          ("C-x t d"   . treemacs-select-directory)
          ("C-x t B"   . treemacs-bookmark)
          ("C-x t C-t" . treemacs-find-file)
          ("C-x t M-t" . treemacs-find-tag)))

  (use-package treemacs-evil
    :after (treemacs evil)
    :ensure t)
#+end_src

** LSP & DAP

Language server protocol and debug adapter protocol configuration.

*** LSP

Enable lsp+flycheck with some language servers.

#+begin_src emacs-lisp
  (use-package lsp-mode
    :hook (c-mode . lsp)
    :custom
    (lsp-diagnostics-clean-after-change t)
    (lsp-diagnostics-flycheck-default-level 'info))
  (setq lsp-keymap-prefix "C-l")
  (use-package lsp-pyright
    :ensure t
    :hook (python-mode . (lambda ()
                           (require 'lsp-pyright)
                           (lsp))))
  (use-package flycheck
    :init (global-flycheck-mode))
#+end_src

Improve LSP perfomance.

#+begin_src emacs-lisp
  (setq gc-cons-threshold 100000000) ; 100mb
  (setq read-process-output-max (* 1024 1024)) ;; 1mb
#+end_src

Add UI.

#+begin_src emacs-lisp
  (use-package lsp-ui
    :after lsp-mode
    :custom
    (lsp-ui-doc-show-with-cursor t)
    (lsp-ui-sideline-show-diagnostics t))
#+end_src

And autocompletion framework.

#+begin_src emacs-lisp
  (use-package company
    :init (global-company-mode)
    :bind (:map company-active-map
                ("<tab>" . company-select-next)
                ("<backtab>" . company-select-previous))
    :custom
    (company-minimum-prefix-length 1)
    (company-idle-delay 0.01))
#+end_src

*** DAP
